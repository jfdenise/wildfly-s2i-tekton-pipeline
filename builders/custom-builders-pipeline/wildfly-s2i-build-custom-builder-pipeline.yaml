apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: wildfly-s2i-build-custom-builder-pipeline-os
spec:
  params:
    - name: builderName
    - name: layers
    - name: extraFeaturePacks
      default: ""
    - name: wildflyFeaturePack
      default: "org.wildfly:wildfly-galleon-pack"
    - name: wildflyVersion
      default: "27.0.0.Final"
    - name: namespace
      default: "$(context.pipelineRun.namespace)"
    - name: dockerRegistry
      default: "image-registry.openshift-image-registry.svc:5000"
    - name: imageVersion
      default: "latest"
  workspaces:
    - name: shared-data
    - name: maven-cache
  tasks:
    - name: check-builder-image
      taskRef:
        name: wildfly-s2i-check-builder-task-os
      params:
      - name: namespace
        value: "$(params.namespace)"
      - name: builderName
        value: "$(params.builderName)"
    - name: wildfly-s2i-build-builder
      taskRef:
        name: wildfly-s2i-build-os-task
      params:
        - name: GALLEON_PROVISION_LAYERS
          value: "$(params.layers)"
        - name: GALLEON_PROVISION_FEATURE_PACKS
          value: "$(params.wildflyFeaturePack):$(params.wildflyVersion),$(params.extraFeaturePacks)"
        - name: imageVersion
          value: "$(params.imageVersion)"
        - name: runtimeImage
          value: "quay.io/wildfly/wildfly-s2i"
      runAfter: 
        - check-builder-image
      when:
      - input: "$(tasks.check-builder-image.results.builderAvailable)"
        operator: in
        values: ["false"]
      workspaces:
        - name: sources
          workspace: shared-data
        - name: maven-cache
          workspace: maven-cache
    - name: buildah-build-push
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
        - name: IMAGE
          value: "$(params.dockerRegistry)/$(params.namespace)/$(params.builderName)"
        - name: DOCKERFILE
          value: "$(tasks.wildfly-s2i-build-builder.results.dockerFile)"
        - name: CONTEXT
          value: "$(tasks.wildfly-s2i-build-builder.results.dockerBuildContext)"
        - name: TLSVERIFY
          value: "false" 
      runAfter: 
        - wildfly-s2i-build-builder
      when:
      - input: "$(tasks.check-builder-image.results.builderAvailable)"
        operator: in
        values: ["false"]
      workspaces:
        - name: source
          workspace: shared-data
