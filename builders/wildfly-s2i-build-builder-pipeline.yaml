apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: wildfly-s2i-build-builder-pipeline-os
spec:
  params:
    - name: gitUrl
    - name: revision
      default: "main"
    - name: contextDir
      default: ""
    - name: builderName
    - name: namespace
      default: "$(context.pipelineRun.namespace)"
    - name: dockerRegistry
      default: "image-registry.openshift-image-registry.svc:5000"
    - name: deploy
      default: "true"
    - name: deploymentName
    - name: MAVEN_ARGS_APPEND
      default: ""
    - name: MAVEN_OPTS
      default: ""
    - name: ARTIFACT_DIR
      default: ""
  workspaces:
    - name: shared-data
    - name: maven-cache
  tasks:
    - name: check-builder-image
      taskRef:
        name: wildfly-s2i-check-builder-task-os
      params:
      - name: namespace
        value: "$(params.namespace)"
      - name: builderName
        value: "$(params.builderName)"
    - name: git-clone-builder-repo
      runAfter: 
        - check-builder-image
      when:
      - input: "$(tasks.check-builder-image.results.builderAvailable)"
        operator: in
        values: ["false"]
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: shared-data
      params:
        - name: url
          value: "http://github.com/wildfly/wildfly-s2i"
        - name: revision
          value: "main"
        - name: deleteExisting
          value: "true"
        - name: depth
          value: "1"
    - name: wildfly-s2i-build-builder
      taskRef:
        name: wildfly-s2i-build-builder-os-task
      params:
        - name: builderName
          value: "$(params.builderName)"
        - name: contextDir
          value: "wildfly-builders"
      runAfter: 
        - git-clone-builder-repo
      when:
      - input: "$(tasks.check-builder-image.results.builderAvailable)"
        operator: in
        values: ["false"]
      workspaces:
        - name: sources
          workspace: shared-data
        - name: maven-cache
          workspace: maven-cache
    - name: buildah-build-push
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
        - name: IMAGE
          value: "$(params.dockerRegistry)/$(params.namespace)/$(params.builderName)"
        - name: DOCKERFILE
          value: "$(tasks.wildfly-s2i-build-builder.results.dockerFile)"
        - name: CONTEXT
          value: "$(tasks.wildfly-s2i-build-builder.results.dockerBuildContext)"
        - name: TLSVERIFY
          value: "false" 
      runAfter: 
        - wildfly-s2i-build-builder
      when:
      - input: "$(tasks.check-builder-image.results.builderAvailable)"
        operator: in
        values: ["false"]
      workspaces:
        - name: source
          workspace: shared-data
    - name: git-clone-repo
      runAfter: 
        - buildah-build-push
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: shared-data
      params:
        - name: url
          value: "$(params.gitUrl)"
        - name: revision
          value: "$(params.revision)"
        - name: deleteExisting
          value: "true"
        - name: depth
          value: "1"
    - name: wildfly-s2i-build-app
      taskRef:
        name: wildfly-s2i-build-app-os-task
      params:
        - name: namespace
          value: "$(params.namespace)"
        - name: builderName
          value: "$(params.builderName)"
        - name: contextDir
          value: "$(params.contextDir)"
        - name: MAVEN_ARGS_APPEND
          value: "$(params.MAVEN_ARGS_APPEND)"
        - name: MAVEN_OPTS
          value: "$(params.MAVEN_OPTS)"
        - name: _ARTIFACT_DIR
          value: "$(params.ARTIFACT_DIR)"
      runAfter: 
        - git-clone-repo
      workspaces:
        - name: sources
          workspace: shared-data
        - name: maven-cache
          workspace: maven-cache
    - name: buildah-build-push-runtime-app
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
        - name: IMAGE
          value: "$(params.dockerRegistry)/$(params.namespace)/$(params.deploymentName)"
        - name: DOCKERFILE
          value: "$(tasks.wildfly-s2i-build-app.results.dockerFile)"
        - name: CONTEXT
          value: "$(tasks.wildfly-s2i-build-app.results.dockerBuildContext)"
        - name: TLSVERIFY
          value: "false" 
      runAfter: 
        - wildfly-s2i-build-app
      workspaces:
        - name: source
          workspace: shared-data
    - name: deploy
      taskRef:
        name: openshift-client
        kind: ClusterTask
      runAfter:
        - buildah-build-push-runtime-app
      when:
      - input: "$(params.deploy)"
        operator: in
        values: ["true"]
      params:
      - name: SCRIPT
        value: |
          oc new-app --docker-image $(params.dockerRegistry)/$(params.namespace)/$(params.deploymentName) || true
          oc expose service/$(params.deploymentName) || true