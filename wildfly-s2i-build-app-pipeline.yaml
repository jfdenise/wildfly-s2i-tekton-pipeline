apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: wildfly-s2i-build-app-pipeline
spec:
  params:
    - name: gitUrl
      description: "URL of the git repository"
    - name: revision
      default: "main"
      description: "Revision of the git repository"
    - name: contextDir
      default: ""
      description: "The sub-directory where the application source code exists."
    - name: builderImageStream
      description: "The Image Stream of the custom WildFly s2i builder to use. This builder ImageStream must have been previously generated."
    - name: namespace
      default: "$(context.pipelineRun.namespace)"
      description: "The namespace where to push the image"
    - name: dockerRegistry
      default: "image-registry.openshift-image-registry.svc:5000"
      description: "The docker Registry URL"
    - name: deploy
      default: "false"
      description: "Create a deployment from the generated image and expose the service."
    - name: imageName
      description: "The image name, also used for deployment name."
    - name: MAVEN_ARGS_APPEND
      default: ""
      description: "Additional Maven arguments."
    - name: MAVEN_OPTS
      default: ""
      description: "JVM options passed to maven. Computed automatically at build time."
    - name: MAVEN_S2I_ARTIFACT_DIRS
      default: ""
      description: "Relative paths of source directories to scan for build output. Defaults to **target**"
    - name: imageVersion
      default: "latest"
      description: "Custom WildFly s2i builder and WildFly runtime images version. Can be latest, latest-jdk11 or latest-jdk17"
    - name: runtimeImageStream
      type: string
      default: ""
      description: >-
       To avoid copying the provision server to a naked WildFly runtime image, set this parameter to reference a runtime image ImageStream that already contains 
       a WildFly server.  Only the deployments will get copied to this runtime imager.
  workspaces:
    - name: shared-data
    - name: maven-cache
  tasks:
    - name: git-clone-repo
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: shared-data
      params:
        - name: url
          value: "$(params.gitUrl)"
        - name: revision
          value: "$(params.revision)"
        - name: deleteExisting
          value: "true"
        - name: depth
          value: "1"
    - name: wildfly-s2i-build-app
      taskRef:
        name: wildfly-s2i-build-task
      params:
        - name: contextDir
          value: "$(params.contextDir)"
        - name: MAVEN_ARGS_APPEND
          value: "$(params.MAVEN_ARGS_APPEND)"
        - name: MAVEN_OPTS
          value: "$(params.MAVEN_OPTS)"
        - name: MAVEN_S2I_ARTIFACT_DIRS
          value: "$(params.MAVEN_S2I_ARTIFACT_DIRS)"
        - name: builderImageVersion
          value: "$(params.imageVersion)"
        - name: runtimeImageVersion
          value: "$(params.imageVersion)"
        - name: builderImage
          value: "$(params.dockerRegistry)/$(params.namespace)/$(params.builderImageStream)"
        - name: deployOnlyRuntimeImageName
          value: "$(params.runtimeImageStream)"
        - name: namespace
          value: "$(params.namespace)"
        - name: dockerRegistry
          value: "$(params.dockerRegistry)"
      runAfter: 
        - git-clone-repo
      workspaces:
        - name: sources
          workspace: shared-data
        - name: maven-cache
          workspace: maven-cache
    - name: buildah-build-push-runtime-app
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
        - name: IMAGE
          value: "$(params.dockerRegistry)/$(params.namespace)/$(params.imageName)"
        - name: DOCKERFILE
          value: "$(tasks.wildfly-s2i-build-app.results.dockerFile)"
        - name: CONTEXT
          value: "$(tasks.wildfly-s2i-build-app.results.dockerBuildContext)"
        - name: TLSVERIFY
          value: "false" 
      runAfter: 
        - wildfly-s2i-build-app
      workspaces:
        - name: source
          workspace: shared-data
    - name: enable-image-lookup
      taskRef:
        name: openshift-client
        kind: ClusterTask
      runAfter:
        - buildah-build-push-runtime-app
      when:
      - input: "$(params.deploy)"
        operator: in
        values: ["true"]
      params:
      - name: SCRIPT
        value: |
          oc set image-lookup $(params.imageName)
    - name: helm-install
      taskRef:
        name: helm-upgrade-from-repo
        kind: ClusterTask
      runAfter:
        - enable-image-lookup
      when:
      - input: "$(params.deploy)"
        operator: in
        values: ["true"]
      params:
      - name: helm_repo
        value: "https://docs.wildfly.org/wildfly-charts/"
      - name: chart_name
        value: "wildfly/wildfly"
      - name: release_name
        value: "$(params.imageName)"
      - name: overwrite_values
        value: "image.name=$(params.imageName),build.enabled=false"
 